#-----------------------------------------------------------------------------------------------------------------------------------------------------#

APP = $(shell basename `pwd`)

LAST_BUILD_FILE := LAST_BUILD

BUILD_NUMBER := ${BUILD_NUMBER}
BUILD_NUMBER_FILE := /dev/null

ifeq ($(BUILD_NUMBER),)
	ifneq ($(wildcard BUILD_NUMBER),)
		BUILD_NUMBER_FILE = BUILD_NUMBER
	else
		BUILD_NUMBER_FILE = ../go-builds/v/$(APP)
	endif

	ifneq ($(wildcard $(BUILD_NUMBER_FILE)),)
		BUILD_NUMBER = $(shell cat $(BUILD_NUMBER_FILE))
	else
		BUILD_NUMBER = 1
	endif
endif

ifneq ($(wildcard WITHOUT_GLOBAL_TAGS),)
	TAGS_FILES = $(wildcard TAGS)
else
	TAGS_FILES = $(wildcard ../TAGS TAGS)
endif

SPACE =
SPACE +=

#-----------------------------------------------------------------------------------------------------------------------------------------------------#

COPYRIGHT =

ifneq ($(wildcard COPYRIGHT),)
	COPYRIGHT = $(shell cat COPYRIGHT)
endif

TS   = $(shell date -u +'%Y-%m-%d %H:%M:%S')
YEAR = $(shell date -u +'%Y')

TS        := $(subst $(SPACE),_,$(strip $(TS)))
COPYRIGHT := $(subst $(SPACE),_,$(strip $(COPYRIGHT)$(YEAR)))

#-----------------------------------------------------------------------------------------------------------------------------------------------------#

VERSION =

ifneq ($(wildcard VERSION),)
	VERSION = $(shell cat VERSION)

	ifneq ($(strip $(BUILD_NUMBER)),)
		VERSION := $(VERSION).$(BUILD_NUMBER)
	endif
endif

#-----------------------------------------------------------------------------------------------------------------------------------------------------#

TAGS =
RELEASE =

ifneq ($(TAGS_FILES),)
	TAGS = $(shell (cat $(TAGS_FILES) | tr -d '\r' | tr '\n' ' ' | sed 's/ *$$//' | tr ' ' '_'))
	RELEASE = $(shell (cat $(TAGS_FILES) | head -1))
endif

#-----------------------------------------------------------------------------------------------------------------------------------------------------#

GO_FLAGS =

ifeq ($(wildcard STATIC),)
	CGO      = 1
	EXTRA_LD =
else
	CGO      = 0
	EXTRA_LD = -extldflags -static
endif

#-----------------------------------------------------------------------------------------------------------------------------------------------------#

.DEFAULT_GOAL = default

.PHONY: default pull build

default:
	@echo Availavle targets: default pull build


#-----------------------------------------------------------------------------------------------------------------------------------------------------#

pull:
	git pull

#-----------------------------------------------------------------------------------------------------------------------------------------------------#

build: pull
	CGO_ENABLED=$(CGO) \
	go build -o "$(APP)" \
		$(GO_FLAGS) \
		--ldflags "$(EXTRA_LD) \
		-X github.com/alrusov/misc.appVersion=$(VERSION) \
		-X github.com/alrusov/misc.appTags=$(TAGS) \
		-X github.com/alrusov/misc.buildTime=$(TS) \
		-X github.com/alrusov/misc.copyright=$(COPYRIGHT)"

	echo $$(($(BUILD_NUMBER) + 1)) >$(BUILD_NUMBER_FILE)
	echo $(VERSION) >$(LAST_BUILD_FILE)


#-----------------------------------------------------------------------------------------------------------------------------------------------------#
